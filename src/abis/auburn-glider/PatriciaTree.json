{
    "contractName": "PatriciaTree",
    "abi": [
        {
            "constant": true,
            "inputs": [
                {
                    "name": "hash",
                    "type": "bytes32"
                }
            ],
            "name": "getNode",
            "outputs": [
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "name": "node",
                                    "type": "bytes32"
                                },
                                {
                                    "components": [
                                        {
                                            "name": "data",
                                            "type": "bytes32"
                                        },
                                        {
                                            "name": "length",
                                            "type": "uint256"
                                        }
                                    ],
                                    "name": "label",
                                    "type": "tuple"
                                }
                            ],
                            "name": "children",
                            "type": "tuple[2]"
                        }
                    ],
                    "name": "n",
                    "type": "tuple"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "getRootHash",
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "getRootEdge",
            "outputs": [
                {
                    "components": [
                        {
                            "name": "node",
                            "type": "bytes32"
                        },
                        {
                            "components": [
                                {
                                    "name": "data",
                                    "type": "bytes32"
                                },
                                {
                                    "name": "length",
                                    "type": "uint256"
                                }
                            ],
                            "name": "label",
                            "type": "tuple"
                        }
                    ],
                    "name": "e",
                    "type": "tuple"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "key",
                    "type": "bytes"
                },
                {
                    "name": "value",
                    "type": "bytes"
                }
            ],
            "name": "insert",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "key",
                    "type": "bytes"
                }
            ],
            "name": "getProof",
            "outputs": [
                {
                    "name": "branchMask",
                    "type": "uint256"
                },
                {
                    "name": "_siblings",
                    "type": "bytes32[]"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "key",
                    "type": "bytes"
                },
                {
                    "name": "value",
                    "type": "bytes"
                },
                {
                    "name": "branchMask",
                    "type": "uint256"
                },
                {
                    "name": "siblings",
                    "type": "bytes32[]"
                }
            ],
            "name": "getImpliedRoot",
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "payable": false,
            "stateMutability": "pure",
            "type": "function"
        }
    ],
    "bytecode": "0x608060405234801561001057600080fd5b5061144f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806320ba5b601461006757806350c946fe1461007c578063693ac4fb146100a55780637f8b9478146100c657806380759f1f146100e6578063a43914da146100ee575b600080fd5b61007a610075366004610e8a565b610103565b005b61008f61008a366004610e2f565b610121565b60405161009c9190611333565b60405180910390f35b6100b86100b3366004610e55565b6101b0565b60405161009c929190611341565b6100d96100d4366004610ef3565b6101cd565b60405161009c91906112d7565b6100d96101e4565b6100f66101ea565b60405161009c9190611325565b8151602083012061011d906000908363ffffffff61022316565b5050565b610129610c7b565b6000828152600460209081526040808320815160608101909252909290918391908201908390600290835b828210156101a2576040805180820182526003840286018054825282518084019093526001808201548452600290910154602084810191909152808301939093529083529092019101610154565b505050915250909392505050565b600060606101c483805190602001206102db565b91509150915091565b60006101db8585858561055a565b95945050505050565b60005490565b6101f2610c93565b5060408051808201825260015481528151808301909252600254825260035460208381019190915281019190915290565b61022b610caa565b5060408051808201909152828152610100602080830191909152825190830120610253610c93565b855461026857602081018390528181526102ab565b6040805180820182526001880154815281518083019092526002880154825260038801546020838101919091528101919091526102a89087908585610582565b90505b6102b4816107be565b86558051600187015560209081015180516002880155015160039095019490945550505050565b6000805460609061030a57604051600160e51b62461bcd028152600401610301906112f5565b60405180910390fd5b610312610caa565b50604080518082019091528381526101006020820152610330610c93565b50604080518082018252600154815281518083019092526002548252600354602083810191909152810191909152610366610cc1565b6000805b610372610caa565b61037a610caa565b602086015161039090889063ffffffff6107fd16565b60208089015181015190830151929450909250146103aa57fe5b60208101516103ba5750506104df565b8160200151840193508360ff036001901b8917985060018401935060006103df610caa565b6103e88361082b565b8951600090815260046020526040902091935091506104569060018490036002811061041057fe5b60030201604051806040016040529081600082015481526020016001820160405180604001604052908160008201548152602001600182015481525050815250506107be565b60018601958890610100811061046857fe5b6020908102919091019190915288516000908152600490915260409020826002811061049057fe5b600302016040518060400160405290816000820154815260200160018201604051806040016040529081600082015481526020016001820154815250508152505097508098505050505061036a565b8015610550578060405190808252806020026020018201604052801561050f578160200160208202803883390190505b50955060005b8181101561054e578381610100811061052a57fe5b602002015187828151811061053b57fe5b6020908102919091010152600101610515565b505b5050505050915091565b600080610577868051906020012086805190602001208686610888565b509695505050505050565b61058a610c93565b836020015160200151836020015110156105a057fe5b6105a8610caa565b6105b0610caa565b6105be8587602001516107fd565b909250905060006105cd610caa565b60008360200151600014156105e357508561079a565b88602001516020015185602001511061070b57600184602001511161060457fe5b61060c610c7b565b8951600090815260048c0160209081526040808320815160608101909252909290918391908201908390600290835b8282101561068957604080518082018252600384028601805482528251808401909352600180820154845260029091015460208481019190915280830193909352908352909201910161063b565b5050505081525050905061069c8561082b565b825191955093506106c0908c9086600281106106b457fe5b6020020151858b610582565b815185600281106106cd57fe5b602090810291909101919091528a51600090815260048d0190915260408120906106f78282610ce1565b50506107038b82610a09565b91505061079a565b6107148461082b565b9093509150610721610c7b565b60408051808201909152888152602081018490528151856002811061074257fe5b602002018190525060405180604001604052808b6000015181526020016107748c602001518960200151600101610a6d565b9052815160018690036002811061078757fe5b60200201526107968b82610a09565b9150505b60405180604001604052808281526020018681525095505050505050949350505050565b80516020808301518082015190516040516000946107e09490939291016112a0565b604051602081830303815290604052805190602001209050919050565b610805610caa565b61080d610caa565b6108208461081b8686610ab2565b610b1b565b915091509250929050565b6000610835610caa565b600083602001511161085c57604051600160e51b62461bcd02815260040161030190611315565b5050805160408051808201909152825160011b8152602092830151600019019281019290925260ff1c91565b6000610892610d0b565b61089a610caa565b506040805180820190915286815261010060208201526108b8610c93565b8681526108c3610d0b565b60005b865181101561099f5760006108da89610b82565b60ff169050806001901b19891698506108ff8160ff0386610b1b90919063ffffffff16565b602086018190529095506000906109159061082b565b60208701529050610925856107be565b84826002811061093157fe5b6020020152885189906000198582030190811061094a57fe5b602002602001015184826001036002811061096157fe5b6020020181815250508360405160200161097b9190611265565b60408051601f198184030181529190528051602090910120855250506001016108c6565b50866109b157602082018390526109f2565b60006109bc88610b82565b60ff1690506109d78160ff0385610b1b90919063ffffffff16565b602085018190529094506109ea9061082b565b602085015250505b6109fb826107be565b999098509650505050505050565b600080610a1583610be4565b8351516000828152600487810160209081526040909220835181559282015180516001850155820151600284015586518201518051600385015582015180519184019190915501516005909101559150505b92915050565b610a75610caa565b8260200151821115610a9c57604051600160e51b62461bcd02815260040161030190611305565b602080840151839003908201529151901b815290565b6000808260200151846020015110610ace578260200151610ad4565b83602001515b905080610ae5576000915050610a67565b82518451186000196101008390031b1680610b0257509050610a67565b610b0b81610c17565b60ff0360ff169250505092915050565b610b23610caa565b610b2b610caa565b83602001518311158015610b4157506101008311155b610b4757fe5b6020820183905282610b5c5760008252610b6b565b835160011960ff8590031b1682525b60208085015184900390820152925190911b825291565b600081610ba457604051600160e51b62461bcd028152600401610301906112e5565b8160805b60018160ff1610610bdd57600019600160ff83161b018216610bd2579182019160ff81169190911c905b60ff1660011c610ba8565b5050919050565b8051600090610bf990825b60200201516107be565b8251610c06906001610bef565b6040516020016107e092919061127a565b600081610c3957604051600160e51b62461bcd028152600401610301906112e5565b8160805b60018160ff1610610bdd578060ff1660018260ff166001901b03901b8216600014610c70579182019160ff81169190911c905b60ff1660011c610c3d565b6040518060c00160405280610c8e610d29565b905290565b60408051606081019091526000815260208101610c8e5b604080518082019091526000808252602082015290565b604051806120000160405280610100906020820280388339509192915050565b50600080825560018201819055600282018190556003820181905560048201819055600590910155565b60405180604001604052806002906020820280388339509192915050565b6040518060c001604052806002905b610d40610c93565b815260200190600190039081610d385790505090565b600082601f830112610d6757600080fd5b8135610d7a610d7582611388565b611361565b91508181835260208401935060208101905083856020840282011115610d9f57600080fd5b60005b83811015610dcb5781610db58882610dd5565b8452506020928301929190910190600101610da2565b5050505092915050565b8035610a67816113fe565b600082601f830112610df157600080fd5b8135610dff610d75826113a9565b91508082526020830160208301858383011115610e1b57600080fd5b610e268382846113f2565b50505092915050565b600060208284031215610e4157600080fd5b6000610e4d8484610dd5565b949350505050565b600060208284031215610e6757600080fd5b813567ffffffffffffffff811115610e7e57600080fd5b610e4d84828501610de0565b60008060408385031215610e9d57600080fd5b823567ffffffffffffffff811115610eb457600080fd5b610ec085828601610de0565b925050602083013567ffffffffffffffff811115610edd57600080fd5b610ee985828601610de0565b9150509250929050565b60008060008060808587031215610f0957600080fd5b843567ffffffffffffffff811115610f2057600080fd5b610f2c87828801610de0565b945050602085013567ffffffffffffffff811115610f4957600080fd5b610f5587828801610de0565b9350506040610f6687828801610dd5565b925050606085013567ffffffffffffffff811115610f8357600080fd5b610f8f87828801610d56565b91505092959194509250565b6000610fa783836110bc565b505060200190565b6000610fbb8383611206565b505060600190565b610fcc816113da565b610fd681846113e4565b9250610fe1826113d1565b8060005b8381101561100f578151610ff98782610f9b565b9650611004836113d4565b925050600101610fe5565b505050505050565b6000611022826113e0565b61102c81856113e9565b9350611037836113d4565b8060005b8381101561106557815161104f8882610f9b565b975061105a836113d4565b92505060010161103b565b509495945050505050565b611079816113da565b61108381846113e4565b925061108e826113d1565b8060005b8381101561100f5781516110a68782610faf565b96506110b1836113d4565b925050600101611092565b6110c5816113d1565b82525050565b6110c56110d7826113d1565b6113d1565b60006110e9601e836113e9565b7f636f6c6f6e792d70617472696369612d747265652d7a65726f2d73656c660000815260200192915050565b60006111226023836113e9565b7f636f6c6f6e792d70617472696369612d747265652d7a65726f2d747265652d728152600160ea1b621bdbdd02602082015260400192915050565b600061116a602c836113e9565b7f636f6c6f6e792d70617472696369612d747265652d7072656669782d6c6f6e6781527f65722d7468616e2d73656c660000000000000000000000000000000000000000602082015260400192915050565b60006111c96025836113e9565b7f636f6c6f6e792d70617472696369612d747265652d7a65726f2d73656c662d6c8152600160db1b640cadccee8d02602082015260400192915050565b8051606083019061121784826110bc565b50602082015161122a6020850182611230565b50505050565b8051604083019061124184826110bc565b50602082015161122a60208501826110bc565b805160c083019061122a8482611070565b60006112718284610fc3565b50604001919050565b600061128682856110cb565b60208201915061129682846110cb565b5060200192915050565b60006112ac82866110cb565b6020820191506112bc82856110cb565b6020820191506112cc82846110cb565b506020019392505050565b60208101610a6782846110bc565b60208082528101610a67816110dc565b60208082528101610a6781611115565b60208082528101610a678161115d565b60208082528101610a67816111bc565b60608101610a678284611206565b60c08101610a678284611254565b6040810161134f82856110bc565b8181036020830152610e4d8184611017565b60405181810167ffffffffffffffff8111828210171561138057600080fd5b604052919050565b600067ffffffffffffffff82111561139f57600080fd5b5060209081020190565b600067ffffffffffffffff8211156113c057600080fd5b506020601f91909101601f19160190565b90565b60200190565b50600290565b5190565b919050565b90815260200190565b82818337506000910152565b611407816113d1565b811461141257600080fd5b5056fea265627a7a7230582075a018ca3ae0db75594007550381f19d4485cf119a74dc8ee0c8cb996638835b6c6578706572696d656e74616cf50037",
    "devdoc": {
        "methods": {},
        "title": "Patricia tree implementation"
    },
    "userdoc": {
        "methods": {},
        "notice": "More info at: https://github.com/chriseth/patricia-trie"
    }
}